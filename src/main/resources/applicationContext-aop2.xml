<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--
  Spring基于XML的AOP配置前期准备：
  在spring的配置⽂件中加⼊aop的约束
  xmlns:aop="http://www.springframework.org/schema/aop"
  http://www.springframework.org/schema/aop
 https://www.springframework.org/schema/aop/spring-aop.xsd

  Spring基于XML的AOP配置步骤：第⼀步：把通知Bean交给Spring管理
 第⼆步：使⽤aop:config开始aop的配置
 第三步：使⽤aop:aspect配置切⾯
 第四步：使⽤对应的标签配置通知的类型
 ⼊⻔案例采⽤前置通知，标签为aop:before
-->
    <!--把通知bean交给spring来管理-->
<!--    <bean id="logUtil" class="com.zml.aop.test2.LogUtil2"></bean>-->
<!--    <bean id="testService" class="com.zml.aop.test2.TestService"></bean>-->
    <context:component-scan base-package="com.zml.aop.test2"/>
    <!--开启spring对注解aop的⽀持-->
    <aop:aspectj-autoproxy/>

 </beans>